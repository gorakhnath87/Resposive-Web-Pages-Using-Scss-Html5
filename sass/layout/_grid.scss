.row {
  /*10 px=1rem;
     1140 px grid standard following now a days
     width: 1140px;
     max-width fills the with 1005 if less then specified space(view port is less then specified width)
    */
  max-width: $grid-width;
  //background-color: rgba(238, 216, 216, 0.979);
  /*center the row in view port
     center block element inside other block element
     0: top and bottom
     auto: means it will adjust the browser left and right margin by automatically figure out by browser
    */
  margin: 0 auto;
 /*
  we can use not pseudo class or directly last child, both will work
 */
    &:not(:last-child) {
      margin-bottom: $row-margin-vertical;
    }
    @include clearfix;
    /*
      this is the attribute selector
      ^ ==> starts with
      * ==> any text contains
      $ ==> ends with text
    */

    [class^="col-"]{
        //background-color: orangered;
        &:not(:last-child){
            margin-right: $col-margin-horizontal;
        }
        float: left;
    }
    /*
    //select and class with conatins the this text
    [class*="col-"]{

    }
    //any class that end with the text
    [class$="col-"]{

    }
    */
  /*
  ---------we can use like this also---------------
    margin-bottom: $row-margin-vertical;
    &:last-child {
        margin-bottom: 0rem;
    }
  */
  .col-1-of-2{
      // we can mix the unit in scss
      width:calc((100% - #{$col-margin-horizontal})/2);
      
  }
  .col-1-of-3{
    width:calc((100% - 2* #{$col-margin-horizontal})/3);
  }
  .col-2-of-3{
    width:calc(2*((100% - 2* #{$col-margin-horizontal})/3) + #{$col-margin-horizontal});
  }
  .col-1-of-4{
    width:calc((100% - 3* #{$col-margin-horizontal})/4);
  }
  .col-2-of-4{

      width: calc((2*((100% - 3* #{$col-margin-horizontal})/4)) +  #{$col-margin-horizontal});
  }
  .col-3-of-4{
   width:calc((3*((100% - 3* #{$col-margin-horizontal})/4)) + 2* #{$col-margin-horizontal});
  }
}
